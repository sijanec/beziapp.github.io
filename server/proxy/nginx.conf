#server {
#	server_name _;
#    listen   80 default_server;
#    # listen   443 default_server;
#    listen   [::]:80 default_server;
#    # listen   [::]:443 default_server;
#    return   444;
#}
#
#	for devs: substitute	our.proxied.domain.example with your domain
#												their.domain.to.be.proxied.example with theirs
#												127.1.2.3 with our IP on which nginx should listen
#												/tmp/crt with crt+ca ssl bundle
#												/tmp/key with ssl key
#												find line with ourfqdnset and see instructions in commnt
#
#	substitute stuff in apache.conf too: you need apache for this proxying to work
#
#
server {
	listen 127.1.2.3:80;
	listen [::]:80;
	server_name .our.proxied.domain.example;
	return 301 https://our.proxied.domain.example$request_uri;
	port_in_redirect off;
	server_name_in_redirect off;
}
server {
	listen 127.1.2.3:443 ssl http2;
	listen [::]:443 ssl http2;
	ssl_certificate /tmp/crt;
	ssl_certificate_key /tmp/key;
	ssl_session_cache  builtin:1000  shared:SSL:10m;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=604800";
	#root /var/www/html;
	index index.php index.html index.htm index.nginx-debian.html;
	server_name .our.proxied.domain.example;
	location / {
		#try_files $uri $uri/ =404;
		proxy_pass       https://localhost:27443;
		proxy_set_header Host      $host;
		proxy_set_header X-Real-IP $remote_addr;
		set $cors '';
		set $both_conditions "";
		add_header "x-debug-location-gse" "triggered";
		if ($http_origin ~ \.?fqdn\.tld$) { # ourfqdnset fqdn.tld>our-domain.example
			set $cors 'true';
			set $both_conditions "P";
			add_header "x-debug-http-origin-check" "passed";
		}
		if ($cors = 'true') {
			add_header "Access-Control-Allow-Origin" $http_origin always;
			add_header "Access-Control-Allow-Credentials" "true" always;
			add_header "Access-Control-Allow-Methods" "GET, POST, PATCH, PUT, DELETE, OPTIONS" always;
			add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Authorization' always;
			add_header 'Access-Control-Expose-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Authorization' always;
		}
		if ($request_method = 'OPTIONS') {
			set $both_conditions "${both_conditions}D";
		}
		if ($both_conditions = PD) {
			add_header "Access-Control-Allow-Origin" $http_origin always;
			add_header "Access-Control-Allow-Credentials" "true" always;
			add_header "Access-Control-Allow-Methods" "GET, POST, PATCH, PUT, DELETE, OPTIONS" always;
			add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Authorization' always;
			add_header 'Access-Control-Expose-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Authorization' always;
			add_header 'Access-Control-Max-Age' -1;
			add_header 'Content-Type' 'text/plain charset=UTF-8';
			add_header 'Content-Length' 0;
			return 204;
		}
	}
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#	fastcgi_pass unix:/run/php/php7.3-fpm.sock;
	#}
	location ~ /\.ht {
		deny all;
	}
	port_in_redirect off;
	server_name_in_redirect off;
}
### below is just a simple proxy if you run another service, comment it out.
server {
	listen 127.1.2.3:80;
	listen [::]:80;
	server_name .la;
	return 301 https://another-thing.our.proxied.domain.example$request_uri;
	port_in_redirect off;
	server_name_in_redirect off;
}
server {
	listen 127.1.2.3:443 ssl http2;
	listen [::]:443 ssl http2;
	ssl_certificate /tmp/crt;
	ssl_certificate_key /tmp/key;
	ssl_session_cache  builtin:1000  shared:SSL:10m;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=604800";
	#root /var/www/html;
	index index.php index.html index.htm index.nginx-debian.html;
	server_name .another-thing.our.proxied.domain.example;
	location / {
		#try_files $uri $uri/ =404;
	    proxy_pass       http://localhost:44625;
	    proxy_set_header Host      $host;
	    proxy_set_header X-Real-IP $remote_addr;
	}
	#location / {
#		return 301 https://google.com/;
#	}
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#	fastcgi_pass unix:/run/php/php7.3-fpm.sock;
	#}
	location ~ /\.ht {
		deny all;
	}
	port_in_redirect off;
	server_name_in_redirect off;
}
